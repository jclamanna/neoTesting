'''
Generated by vicious
Contact me at tul67492@temple.edu (or erfan.molaei@gmail.com in case I am not at temple anymore) if you are having problem understanding some part of this.
'''

import os
import numpy as np
import pandas as pd
import itertools
from tqdm import tqdm


def load_datasets(seqs_path, seqs_name_pattern):
    train_file, val_file, test_file = seqs_path + os.path.sep + "train_" + seqs_name_pattern, \
                                      seqs_path + os.path.sep + "val_" + seqs_name_pattern, \
                                      seqs_path + os.path.sep + "test_" + seqs_name_pattern,
    train_df = pd.read_csv(train_file)
    val_df = pd.read_csv(val_file)
    test_df = pd.read_csv(test_file)
    train_x, train_y = train_df.iloc[:, 2].values, train_df.iloc[:, 1].values
    val_x, val_y = val_df.iloc[:, 2].values, val_df.iloc[:, 1].values
    test_x, test_y = test_df.iloc[:, 2].values, test_df.iloc[:, 1].values
    return train_x, train_y, val_x, val_y, test_x, test_y


def encode_sequences(seqs, alphabet):
    temp = np.array([list(s) for s in seqs.tolist()])
    index_mapper = lambda t: alphabet.index(t)
    map_function = np.vectorize(index_mapper)
    encoded_seqs = map_function(temp).astype("int32")
    return encoded_seqs


class LabelEncoder:
    def __init__(self):
        self.unknown_index = -1
        self.references = None

    def fit(self, reference_labels):
        references = [s.split(' ') for s in reference_labels.tolist()]
        self.references = list(sorted(list(itertools.chain(*references))))
        self.unknown_index = len(self.references)

    def encode(self, to_be_encoded, name="training"):

        def index_mapper(t):
            try:
                return self.references.index(t)
            except ValueError:
                return self.unknown_index

        temp = [s.split(' ') for s in to_be_encoded.tolist()]
        encoded_labels = np.zeros((len(to_be_encoded), len(self.references) + 1), dtype='int32')
        print("Encoding labels for:", name)
        for i in tqdm(range(len(temp))):
            for label in temp[i]:
                encoded_labels[i, index_mapper(label)] = 1
        return encoded_labels


